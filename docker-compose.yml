version: "3.8"

services:
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  #   healthcheck:
  #     test: ["CMD", "rabbitmqctl", "ping"]
  #     interval: 5s
  #     timeout: 10s
  #     retries: 5
  #   networks:
  #     - app_network

  influxdb:
    image: influxdb:2.6
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - app_network

  daemon:
    build:
      context: ./daemon
    container_name: daemon
    depends_on:
      - influxdb
      # rabbitmq:
      #   condition: service_healthy
    environment:
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - INFLUXDB_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - INFLUX_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    networks:
      - app_network

  # client:
  #   build:
  #     context: ./client
  #   container_name: client
  #   depends_on:
  #     - rabbitmq
  #   networks:
  #     - app_network

volumes:
  influxdb_data:

networks:
  app_network:
